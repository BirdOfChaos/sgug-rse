diff -Naur netsurf-all-3.10-original/buildsystem/makefiles/Makefile.clang netsurf-all-3.10/buildsystem/makefiles/Makefile.clang
--- netsurf-all-3.10-original/buildsystem/makefiles/Makefile.clang	2020-05-24 15:35:19.000000000 +0000
+++ netsurf-all-3.10/buildsystem/makefiles/Makefile.clang	2021-07-04 11:14:14.587360960 +0000
@@ -3,8 +3,10 @@
 # as clang being mostly GCC-compatible on the command line
 
 CCDEF := -D
-CCOPT := -O2
-CCNOOPT := -O0
+#CCOPT := -O2
+#CCNOOPT := -O0
+CCOPT := -ONOPE
+CCNOOPT := -ONOPE
 CCDBG := -g
 CCINC := -I
 CCLIB := -L
@@ -12,8 +14,10 @@
 CCSHR := -fPIC
 
 CXXDEF := -D
-CXXOPT := -O2
-CXXNOOPT := -O0
+#CXXOPT := -O2
+#CXXNOOPT := -O0
+CXXOPT := -ONOPE
+CXXNOOPT := -ONOPE
 CXXDBG := -g
 CXXINC := -I
 CXXLIB := -L
diff -Naur netsurf-all-3.10-original/buildsystem/makefiles/Makefile.clang.orig netsurf-all-3.10/buildsystem/makefiles/Makefile.clang.orig
--- netsurf-all-3.10-original/buildsystem/makefiles/Makefile.clang.orig	1969-12-31 17:00:00.000000000 +0000
+++ netsurf-all-3.10/buildsystem/makefiles/Makefile.clang.orig	2021-07-04 11:09:03.188149600 +0000
@@ -0,0 +1,65 @@
+# Clang-specific toolchain setup
+# We assume that we're using a standard GCC/binutils environment, as well
+# as clang being mostly GCC-compatible on the command line
+
+CCDEF := -D
+#CCOPT := -O2
+#CCNOOPT := -O0
+CCOPT := -ONOPE
+CCNOOPT := -ONOPE
+CCDBG := -g
+CCINC := -I
+CCLIB := -L
+CCAS := -xassembler-with-cpp
+CCSHR := -fPIC
+
+CXXDEF := -D
+#CXXOPT := -O2
+#CXXNOOPT := -O0
+CXXOPT := -ONOPE
+CXXNOOPT := -ONOPE
+CXXDBG := -g
+CXXINC := -I
+CXXLIB := -L
+CXXSHR := -fPIC
+
+LDDBG := -g
+# Reevaluation is required here
+LDSHR = -shared -Wl,-soname,$(SONAME)
+
+ARFLG := cru
+
+# Definitions of various attributes
+CFLAGS := $(CFLAGS) -D_ALIGNED="__attribute__((aligned))" -DSTMTEXPR=1
+
+# Extensions for sanitize target
+ifeq ($(MAKECMDGOALS),sanitize)
+  SANCFLAGS ?= -fsanitize=address -fsanitize=undefined -fno-sanitize-recover
+  SANCXXFLAGS ?= -fsanitize=address -fsanitize=undefined -fno-sanitize-recover
+  SANLDFLAGS ?= -fsanitize=address -fsanitize=undefined -fno-sanitize-recover
+
+  CFLAGS := $(CFLAGS) $(SANCFLAGS)
+  CXXFLAGS := $(CXXFLAGS) $(SANCXXFLAGS)
+  LDFLAGS := $(LDFLAGS) $(SANLDFLAGS)
+endif
+
+###############################################################################
+# Mac OS X Universal Binaries
+###############################################################################
+
+ifeq ($(findstring darwin,$(HOST)),darwin)
+	ifneq ($(UNIVERSAL),)
+		UNIVERSAL_FLAGS := $(foreach arch,$(UNIVERSAL),-arch $(arch) )
+		
+		CFLAGS := $(CFLAGS) $(UNIVERSAL_FLAGS)
+		LDFLAGS := $(LDFLAGS) $(UNIVERSAL_FLAGS)
+		CXXFLAGS := $(CXXFLAGS) $(UNIVERSAL_FLAGS)
+		ARFLAGS := $(ARFLAGS) -s 
+	endif
+endif
+
+###############################################################################
+# Other settings
+###############################################################################
+
+CC_CAN_BUILD_AND_DEP ?= yes
diff -Naur netsurf-all-3.10-original/buildsystem/makefiles/Makefile.gcc netsurf-all-3.10/buildsystem/makefiles/Makefile.gcc
--- netsurf-all-3.10-original/buildsystem/makefiles/Makefile.gcc	2020-05-24 15:35:19.000000000 +0000
+++ netsurf-all-3.10/buildsystem/makefiles/Makefile.gcc	2021-07-04 11:14:14.590054080 +0000
@@ -2,8 +2,10 @@
 # We assume that we're using a standard GCC/binutils environment
 
 CCDEF := -D
-CCOPT := -O2
-CCNOOPT := -O0
+#CCOPT := -ONOPE
+#CCNOOPT := -ONOPE
+CCOPT :=
+CCNOOPT :=
 CCDBG := -g
 CCINC := -I
 CCLIB := -L
@@ -11,8 +13,10 @@
 CCSHR := -fPIC
 
 CXXDEF := -D
-CXXOPT := -O2
-CXXNOOPT := -O0
+#CXXOPT := -ONOPE
+#CXXNOOPT := -ONOPE
+CXXOPT :=
+CXXNOOPT :=
 CXXDBG := -g
 CXXINC := -I
 CXXLIB := -L
diff -Naur netsurf-all-3.10-original/buildsystem/makefiles/Makefile.gcc.orig netsurf-all-3.10/buildsystem/makefiles/Makefile.gcc.orig
--- netsurf-all-3.10-original/buildsystem/makefiles/Makefile.gcc.orig	1969-12-31 17:00:00.000000000 +0000
+++ netsurf-all-3.10/buildsystem/makefiles/Makefile.gcc.orig	2021-07-04 11:09:06.027751760 +0000
@@ -0,0 +1,110 @@
+# GCC specific toolchain setup
+# We assume that we're using a standard GCC/binutils environment
+
+CCDEF := -D
+#CCOPT := -ONOPE
+#CCNOOPT := -ONOPE
+CCOPT :=
+CCNOOPT :=
+CCDBG := -g
+CCINC := -I
+CCLIB := -L
+CCAS := -xassembler-with-cpp
+CCSHR := -fPIC
+
+CXXDEF := -D
+#CXXOPT := -ONOPE
+#CXXNOOPT := -ONOPE
+CXXOPT :=
+CXXNOOPT :=
+CXXDBG := -g
+CXXINC := -I
+CXXLIB := -L
+CXXSHR := -fPIC
+
+LDDBG := -g
+# Reevaluation is required here
+LDSHR = -shared -Wl,-soname,$(SONAME)
+
+ARFLG := cru
+
+# Definitions for various attributes
+CFLAGS := $(CFLAGS) -D_ALIGNED="__attribute__((aligned))" -DSTMTEXPR=1
+
+# Extensions for coverage target
+ifeq ($(MAKECMDGOALS),coverage)
+  COVCFLAGS ?= -fprofile-arcs -ftest-coverage
+  COVCXXFLAGS ?= -fprofile-arcs -ftest-coverage
+  COVLDFLAGS ?= -lgcov
+
+  CFLAGS := $(CFLAGS) $(COVCFLAGS)
+  CXXFLAGS := $(CXXFLAGS) $(COVCXXFLAGS)
+  LDFLAGS := $(LDFLAGS) $(COVLDFLAGS)
+endif
+
+# Extensions for profile target
+ifeq ($(MAKECMDGOALS),profile)
+  PROFCFLAGS ?= -pg
+  PROFCXXFLAGS ?= -pg
+  PROFLDFLAGS ?= -pg
+
+  CFLAGS := $(CFLAGS) $(PROFCFLAGS)
+  CXXFLAGS := $(CXXFLAGS) $(PROFCXXFLAGS)
+  LDFLAGS := $(LDFLAGS) $(PROFLDFLAGS)
+endif
+
+# Extensions for sanitize target
+ifeq ($(MAKECMDGOALS),sanitize)
+  SANCFLAGS ?= -fsanitize=address -fsanitize=undefined -fno-sanitize-recover
+  SANCXXFLAGS ?= -fsanitize=address -fsanitize=undefined -fno-sanitize-recover
+  SANLDFLAGS ?= -fsanitize=address -fsanitize=undefined -fno-sanitize-recover
+
+  CFLAGS := $(CFLAGS) $(SANCFLAGS)
+  CXXFLAGS := $(CXXFLAGS) $(SANCXXFLAGS)
+  LDFLAGS := $(LDFLAGS) $(SANLDFLAGS)
+endif
+
+# RISC OS module extensions
+ifeq ($(COMPONENT_TYPE),riscos-module)
+  ifneq ($(HOST),arm-unknown-riscos)
+    $(error Attempting to build a RISC OS module for a non-RISC OS target)
+  endif
+
+  CFLAGS := $(CFLAGS) -mmodule
+  CXXFLAGS := $(CXXFLAGS) -mmodule
+  LDFLAGS := $(LDFLAGS) -mmodule
+endif
+
+###############################################################################
+# Mac OS X Universal Binaries
+###############################################################################
+
+ifeq ($(findstring darwin,$(HOST)),darwin)
+	ifneq ($(UNIVERSAL),)
+		UNIVERSAL_FLAGS := $(foreach arch,$(UNIVERSAL),-arch $(arch) )
+		CC_CAN_BUILD_AND_DEP := no
+		CC_CANNOT_DEP := yes
+		
+		CFLAGS := $(CFLAGS) $(UNIVERSAL_FLAGS)
+		LDFLAGS := $(LDFLAGS) $(UNIVERSAL_FLAGS)
+		CXXFLAGS := $(CXXFLAGS) $(UNIVERSAL_FLAGS)
+		ARFLAGS := $(ARFLAGS) -s 
+	endif
+endif
+
+###############################################################################
+# Other settings
+###############################################################################
+
+# Determine if the compiler supports simultaneous build & dep.
+ccvsn := $(shell $(CC) -dumpversion -dumpfullversion)
+# ccvsn = x.y.z
+GCCVER := $(word 1,$(subst ., ,$(ccvsn)))
+# GCCVER = x
+
+# If the major version (x, above) is not 2, then assume build & dep.
+# This will break if using a version of GCC < 2, but that's unlikely.
+ifneq ($(GCCVER),2)
+  CC_CAN_BUILD_AND_DEP ?= yes
+endif
+
diff -Naur netsurf-all-3.10-original/buildsystem/makefiles/Makefile.norcroft netsurf-all-3.10/buildsystem/makefiles/Makefile.norcroft
--- netsurf-all-3.10-original/buildsystem/makefiles/Makefile.norcroft	2020-05-24 15:35:19.000000000 +0000
+++ netsurf-all-3.10/buildsystem/makefiles/Makefile.norcroft	2021-07-04 11:14:12.300201520 +0000
@@ -1,7 +1,9 @@
 # Norcroft specific toolchain setup
 
 CCDEF := -D
-CCOPT := -Otime
+#CCOPT := -Otime
+#CCNOOPT :=
+CCOPT := -ONOPE
 CCNOOPT :=
 CCDBG := -g
 CCINC := -I
@@ -11,8 +13,10 @@
 CCSHR :=
 
 CXXDEF := -D
-CXXOPT := -O2
-CXXNOOPT := -O0
+#CXXOPT := -O2
+#CXXNOOPT := -O0
+CXXOPT := -ONOPE
+CXXNOOPT := -ONOPE
 CXXDBG := -g
 CXXINC := -I
 CXXLIB := -L
diff -Naur netsurf-all-3.10-original/buildsystem/makefiles/Makefile.tools netsurf-all-3.10/buildsystem/makefiles/Makefile.tools
--- netsurf-all-3.10-original/buildsystem/makefiles/Makefile.tools	2020-05-24 15:35:19.000000000 +0000
+++ netsurf-all-3.10/buildsystem/makefiles/Makefile.tools	2021-07-04 11:14:12.304927440 +0000
@@ -135,7 +135,8 @@
   endif
 
   # Search the path for the compiler
-  toolpath_ := $(shell /bin/which $(CC__))
+#  toolpath_ := $(shell /bin/which $(CC__))
+  toolpath_ := $(shell which $(CC__))
   ifeq ($(toolpath_),)
     toolpath_ := /opt/netsurf/$(HOST)/cross/bin/
     CC__  := $(toolpath_)$(HOST)-gcc
diff -Naur netsurf-all-3.10-original/libcss/Makefile netsurf-all-3.10/libcss/Makefile
--- netsurf-all-3.10-original/libcss/Makefile	2020-05-24 15:35:19.000000000 +0000
+++ netsurf-all-3.10/libcss/Makefile	2021-07-04 11:14:12.307700800 +0000
@@ -28,7 +28,7 @@
   endif
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/libdom/Makefile netsurf-all-3.10/libdom/Makefile
--- netsurf-all-3.10-original/libdom/Makefile	2020-05-24 15:35:20.000000000 +0000
+++ netsurf-all-3.10/libdom/Makefile	2021-07-04 11:14:12.318081920 +0000
@@ -30,7 +30,7 @@
 ifeq ($(findstring amigaos,$(HOST)),amigaos)
   CFLAGS := -U__STRICT_ANSI__ $(CFLAGS)
 endif
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src -I$(CURDIR)/binding \
 	$(WARNFLAGS) $(CFLAGS)
 # Some gcc2 versions choke on -std=c99, and it doesn't know about it anyway
diff -Naur netsurf-all-3.10-original/libdom/bindings/xml/Makefile netsurf-all-3.10/libdom/bindings/xml/Makefile
--- netsurf-all-3.10-original/libdom/bindings/xml/Makefile	2020-05-24 15:35:20.000000000 +0000
+++ netsurf-all-3.10/libdom/bindings/xml/Makefile	2021-07-04 11:14:12.332835840 +0000
@@ -12,7 +12,7 @@
 
   # LibXML 2.6.26 has a bug in its headers that expects _POSIX_C_SOURCE to be 
   # defined. Define it here, even though we don't need it.
-  CFLAGS := $(CFLAGS) -D_POSIX_C_SOURCE
+  CFLAGS := $(CFLAGS)
 
   DO_XML_INSTALL := yes
 endif
diff -Naur netsurf-all-3.10-original/libhubbub/Makefile netsurf-all-3.10/libhubbub/Makefile
--- netsurf-all-3.10-original/libhubbub/Makefile	2020-05-24 15:35:20.000000000 +0000
+++ netsurf-all-3.10/libhubbub/Makefile	2021-07-04 11:14:12.335519200 +0000
@@ -28,7 +28,7 @@
   endif
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	 -I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/libhubbub/src/treebuilder/in_body.c netsurf-all-3.10/libhubbub/src/treebuilder/in_body.c
--- netsurf-all-3.10-original/libhubbub/src/treebuilder/in_body.c	2020-05-24 15:35:20.000000000 +0000
+++ netsurf-all-3.10/libhubbub/src/treebuilder/in_body.c	2021-07-04 12:56:57.858265520 +0000
@@ -14,6 +14,7 @@
 #include "utils/utils.h"
 
 #undef DEBUG_IN_BODY
+#define NDEBUG
 
 /**
  * Bookmark for formatting list. Used in adoption agency
diff -Naur netsurf-all-3.10-original/libhubbub/src/treebuilder/internal.h netsurf-all-3.10/libhubbub/src/treebuilder/internal.h
--- netsurf-all-3.10-original/libhubbub/src/treebuilder/internal.h	2020-05-24 15:35:20.000000000 +0000
+++ netsurf-all-3.10/libhubbub/src/treebuilder/internal.h	2021-07-04 12:57:04.508404160 +0000
@@ -10,6 +10,8 @@
 
 #include "treebuilder/treebuilder.h"
 
+#define NDEBUG
+
 typedef enum
 {
 /* Special */
diff -Naur netsurf-all-3.10-original/libhubbub/src/treebuilder/treebuilder.c netsurf-all-3.10/libhubbub/src/treebuilder/treebuilder.c
--- netsurf-all-3.10-original/libhubbub/src/treebuilder/treebuilder.c	2020-05-24 15:35:20.000000000 +0000
+++ netsurf-all-3.10/libhubbub/src/treebuilder/treebuilder.c	2021-07-04 12:56:45.451062880 +0000
@@ -19,6 +19,7 @@
 
 
 #define S(x)   x, SLEN(x)
+#define NDEBUG
 
 static const struct {
 	const char *name;
diff -Naur netsurf-all-3.10-original/libnsbmp/Makefile netsurf-all-3.10/libnsbmp/Makefile
--- netsurf-all-3.10-original/libnsbmp/Makefile	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnsbmp/Makefile	2021-07-04 11:14:12.342221680 +0000
@@ -27,7 +27,7 @@
   WARNFLAGS := $(WARNFLAGS) -Werror
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/libnsfb/Makefile netsurf-all-3.10/libnsfb/Makefile
--- netsurf-all-3.10-original/libnsfb/Makefile	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnsfb/Makefile	2021-07-04 11:14:12.344852080 +0000
@@ -29,7 +29,7 @@
 # would like these flags but gcc earlier than 4.4 fail
 #-pedantic -Wno-overlength-strings # For nsglobe.c
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE -D_POSIX_C_SOURCE=200112L \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 # Cope with gcc 2
diff -Naur netsurf-all-3.10-original/libnsfb/src/surface/x.c netsurf-all-3.10/libnsfb/src/surface/x.c
--- netsurf-all-3.10-original/libnsfb/src/surface/x.c	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnsfb/src/surface/x.c	2021-07-04 11:14:12.349116080 +0000
@@ -6,7 +6,9 @@
  *                http://www.opensource.org/licenses/mit-license.php
  */
 
+#if !defined(__sgi)
 #define _XOPEN_SOURCE 500
+#endif
 
 #include <stdbool.h>
 #include <stdlib.h>
diff -Naur netsurf-all-3.10-original/libnsgif/Makefile netsurf-all-3.10/libnsgif/Makefile
--- netsurf-all-3.10-original/libnsgif/Makefile	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnsgif/Makefile	2021-07-04 11:14:12.351758240 +0000
@@ -27,7 +27,7 @@
   WARNFLAGS := $(WARNFLAGS) -Werror
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/libnslog/Makefile netsurf-all-3.10/libnslog/Makefile
--- netsurf-all-3.10-original/libnslog/Makefile	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnslog/Makefile	2021-07-04 11:14:12.354554400 +0000
@@ -24,7 +24,7 @@
 	-Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \
 	-Wmissing-declarations -Wnested-externs
 
-CFLAGS := -D_GNU_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src $(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
   CFLAGS := $(CFLAGS) -std=c99
@@ -32,7 +32,7 @@
   # __inline__ is a GCCism
   CFLAGS := $(CFLAGS) -Dinline="__inline__"
 endif
-CFLAGS := $(CFLAGS) -D_POSIX_C_SOURCE=200809L -g
+#CFLAGS := $(CFLAGS)
 
 REQUIRED_LIBS := nslog
 
diff -Naur netsurf-all-3.10-original/libnslog/src/core.c netsurf-all-3.10/libnslog/src/core.c
--- netsurf-all-3.10-original/libnslog/src/core.c	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnslog/src/core.c	2021-07-04 11:14:12.357427040 +0000
@@ -134,7 +134,8 @@
 	if (nslog__corked) {
 		va_list ap2;
 		va_copy(ap2, ap);
-		int slen = vsnprintf(NULL, 0, pattern, ap);
+		/* int slen = vsnprintf(NULL, 0, pattern, ap); */
+		int slen = 8192;
 		va_end(ap);
 		nslog__log_corked(ctx, slen, pattern, ap2);
 		va_end(ap2);
diff -Naur netsurf-all-3.10-original/libnspsl/Makefile netsurf-all-3.10/libnspsl/Makefile
--- netsurf-all-3.10-original/libnspsl/Makefile	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnspsl/Makefile	2021-07-04 11:14:12.370701520 +0000
@@ -23,7 +23,7 @@
 	-Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \
 	-Wmissing-declarations -Wnested-externs
 
-CFLAGS := -D_GNU_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
@@ -32,7 +32,7 @@
   # __inline__ is a GCCism
   CFLAGS := $(CFLAGS) -Dinline="__inline__"
 endif
-CFLAGS := $(CFLAGS) -D_POSIX_C_SOURCE=200809L
+#CFLAGS := $(CFLAGS)
 
 REQUIRED_LIBS := nspsl
 
diff -Naur netsurf-all-3.10-original/libnsutils/Makefile netsurf-all-3.10/libnsutils/Makefile
--- netsurf-all-3.10-original/libnsutils/Makefile	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libnsutils/Makefile	2021-07-04 11:14:12.373547520 +0000
@@ -23,7 +23,7 @@
 	-Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \
 	-Wmissing-declarations -Wnested-externs
 
-CFLAGS := -D_GNU_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src $(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
   CFLAGS := $(CFLAGS) -std=c99
@@ -31,7 +31,7 @@
   # __inline__ is a GCCism
   CFLAGS := $(CFLAGS) -Dinline="__inline__"
 endif
-CFLAGS := $(CFLAGS) -D_POSIX_C_SOURCE=200809L
+#CFLAGS := $(CFLAGS)
 
 REQUIRED_LIBS := nsutils
 
diff -Naur netsurf-all-3.10-original/libparserutils/Makefile netsurf-all-3.10/libparserutils/Makefile
--- netsurf-all-3.10-original/libparserutils/Makefile	2020-05-24 15:35:21.000000000 +0000
+++ netsurf-all-3.10/libparserutils/Makefile	2021-07-04 11:14:12.376222960 +0000
@@ -26,7 +26,7 @@
   WARNFLAGS := $(WARNFLAGS) -Werror
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/libsvgtiny/Makefile netsurf-all-3.10/libsvgtiny/Makefile
--- netsurf-all-3.10-original/libsvgtiny/Makefile	2020-05-24 15:35:22.000000000 +0000
+++ netsurf-all-3.10/libsvgtiny/Makefile	2021-07-04 11:14:12.378896640 +0000
@@ -29,7 +29,7 @@
   endif
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/libsvgtiny/src/svgtiny_internal.h netsurf-all-3.10/libsvgtiny/src/svgtiny_internal.h
--- netsurf-all-3.10-original/libsvgtiny/src/svgtiny_internal.h	2020-05-24 15:35:22.000000000 +0000
+++ netsurf-all-3.10/libsvgtiny/src/svgtiny_internal.h	2021-07-04 11:14:12.381746160 +0000
@@ -77,7 +77,7 @@
 struct svgtiny_shape *svgtiny_add_shape(struct svgtiny_parse_state *state);
 void svgtiny_transform_path(float *p, unsigned int n,
 		struct svgtiny_parse_state *state);
-#if (defined(_GNU_SOURCE) && !defined(__APPLE__) || defined(__amigaos4__) || defined(__HAIKU__) || (defined(_POSIX_C_SOURCE) && ((_POSIX_C_SOURCE - 0) >= 200809L)))
+#if (defined(_GNU_SOURCE) && !defined(__APPLE__) || defined(__sgi) || defined(__amigaos4__) || defined(__HAIKU__) || (defined(_POSIX_C_SOURCE) && ((_POSIX_C_SOURCE - 0) >= 200809L)))
 #define HAVE_STRNDUP
 #else
 #undef HAVE_STRNDUP
diff -Naur netsurf-all-3.10-original/libutf8proc/CMakeLists.txt netsurf-all-3.10/libutf8proc/CMakeLists.txt
--- netsurf-all-3.10-original/libutf8proc/CMakeLists.txt	2020-05-24 15:35:22.000000000 +0000
+++ netsurf-all-3.10/libutf8proc/CMakeLists.txt	2021-07-04 11:14:12.384573920 +0000
@@ -38,7 +38,7 @@
 if (NOT MSVC)
   set_target_properties(
     utf8proc PROPERTIES
-    COMPILE_FLAGS "-O2 -std=c99 -pedantic -Wall"
+    COMPILE_FLAGS "-std=c99 -pedantic -Wall"
   )
 endif ()
 
diff -Naur netsurf-all-3.10-original/libwapcaplet/Makefile netsurf-all-3.10/libwapcaplet/Makefile
--- netsurf-all-3.10-original/libwapcaplet/Makefile	2020-05-24 15:35:22.000000000 +0000
+++ netsurf-all-3.10/libwapcaplet/Makefile	2021-07-04 11:14:12.394193760 +0000
@@ -27,7 +27,7 @@
   WARNFLAGS := $(WARNFLAGS) -Werror
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/netsurf/content/fs_backing_store.c netsurf-all-3.10/netsurf/content/fs_backing_store.c
--- netsurf-all-3.10-original/netsurf/content/fs_backing_store.c	2020-05-24 15:35:22.000000000 +0000
+++ netsurf-all-3.10/netsurf/content/fs_backing_store.c	2021-07-04 11:27:45.585935280 +0000
@@ -1951,6 +1951,7 @@
  */
 static nserror release(nsurl *url, enum backing_store_flags bsflags)
 {
+	NSLOG(netsurf, INFO, "releasing memory object");
 	nserror ret;
 	struct store_entry *bse;
 	struct store_entry_element *elem;
diff -Naur netsurf-all-3.10-original/netsurf/content/llcache.c netsurf-all-3.10/netsurf/content/llcache.c
--- netsurf-all-3.10-original/netsurf/content/llcache.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/content/llcache.c	2021-07-04 11:26:42.406636960 +0000
@@ -54,6 +54,7 @@
 #include "content/backing_store.h"
 #include "content/urldb.h"
 
+
 /**
  * State of a low-level cache object fetch.
  */
@@ -2797,6 +2798,7 @@
 		*elapsed = 1;
 	}
 
+	NSLOG(netsurf, INFO, "And we're done with write_backing_store, ret: %d", ret);
 	return NSERROR_OK;
 }
 
diff -Naur netsurf-all-3.10-original/netsurf/content/urldb.c netsurf-all-3.10/netsurf/content/urldb.c
--- netsurf-all-3.10-original/netsurf/content/urldb.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/content/urldb.c	2021-07-04 11:27:32.219969920 +0000
@@ -1178,7 +1178,6 @@
 static struct search_node **urldb_get_search_tree_direct(const char *host)
 {
 	assert(host);
-
 	if (urldb__host_is_ip_address(host)) {
 		return &search_trees[ST_IP];
 	} else if (ascii_is_alpha(*host)) {
@@ -1213,7 +1212,6 @@
 	int plen, ret;
 
 	assert(a && a != &db_root && b);
-
 	if (urldb__host_is_ip_address(b)) {
 		/* IP address */
 		return strcasecmp(a->part, b);
@@ -2173,7 +2171,6 @@
 	char *part;
 
 	assert(host);
-
 	if (urldb__host_is_ip_address(host)) {
 		/* Host is an IP, so simply add as TLD */
 
diff -Naur netsurf-all-3.10-original/netsurf/frontends/gtk/Makefile netsurf-all-3.10/netsurf/frontends/gtk/Makefile
--- netsurf-all-3.10-original/netsurf/frontends/gtk/Makefile	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/frontends/gtk/Makefile	2021-07-04 11:14:12.482132960 +0000
@@ -35,11 +35,6 @@
 
 GTKCFLAGS := -std=c99 -Dgtk -Dnsgtk -g \
 		$(GTKDEPFLAGS) \
-		-D_BSD_SOURCE \
-		-D_DEFAULT_SOURCE \
-		-D_XOPEN_SOURCE=700 \
-		-D_POSIX_C_SOURCE=200809L \
-		-D_NETBSD_SOURCE \
 		-DGTK_RESPATH=\"$(NETSURF_GTK_RES_PATH)\"
 
 # non optional pkg-configed libs
diff -Naur netsurf-all-3.10-original/netsurf/frontends/gtk/Makefile.defaults netsurf-all-3.10/netsurf/frontends/gtk/Makefile.defaults
--- netsurf-all-3.10-original/netsurf/frontends/gtk/Makefile.defaults	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/frontends/gtk/Makefile.defaults	2021-07-04 11:14:12.488648320 +0000
@@ -39,4 +39,4 @@
 NETSURF_GTK_MAJOR ?= 2
 
 # Optimisation levels
-CFLAGS += -O2
+#CFLAGS += -O2
diff -Naur netsurf-all-3.10-original/netsurf/frontends/gtk/corewindow.c netsurf-all-3.10/netsurf/frontends/gtk/corewindow.c
--- netsurf-all-3.10-original/netsurf/frontends/gtk/corewindow.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/frontends/gtk/corewindow.c	2021-07-04 11:14:12.493375760 +0000
@@ -62,9 +62,9 @@
 
 	if (event->type == GDK_2BUTTON_PRESS) {
 		ms = BROWSER_MOUSE_DOUBLE_CLICK;
-	} else {
+	} /* else {
 		ms = BROWSER_MOUSE_HOVER;
-	}
+	} */
 
 	/* button state */
 	switch (event->button) {
diff -Naur netsurf-all-3.10-original/netsurf/frontends/gtk/gui.c netsurf-all-3.10/netsurf/frontends/gtk/gui.c
--- netsurf-all-3.10-original/netsurf/frontends/gtk/gui.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/frontends/gtk/gui.c	2021-07-04 11:14:12.507808560 +0000
@@ -115,10 +115,14 @@
 	char **respath; /* resource paths vector */
 
 	if (config_home != NULL) {
+		/*
 		resource_path_len = snprintf(NULL, 0,
 					     "%s:${NETSURFRES}:%s",
 					     config_home,
 					     GTK_RESPATH);
+		resource_path_len = strlen(config_home)+strlen(GTK_RESPATH)+4096;
+		*/
+		resource_path_len = 8192;
 		resource_path = malloc(resource_path_len + 1);
 		if (resource_path == NULL) {
 			return NULL;
@@ -128,9 +132,13 @@
 			 config_home,
 			 GTK_RESPATH);
 	} else {
+		/*
 		resource_path_len = snprintf(NULL, 0,
 					     "${NETSURFRES}:%s",
 					     GTK_RESPATH);
+		resource_path_len = strlen("${NETSURFRES}:%s")+strlen(GTK_RESPATH);
+		*/
+		resource_path_len = 8192;
 		resource_path = malloc(resource_path_len + 1);
 		if (resource_path == NULL) {
 			return NULL;
diff -Naur netsurf-all-3.10-original/netsurf/frontends/gtk/resources.c netsurf-all-3.10/netsurf/frontends/gtk/resources.c
--- netsurf-all-3.10-original/netsurf/frontends/gtk/resources.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/frontends/gtk/resources.c	2021-07-04 11:14:12.519898720 +0000
@@ -191,9 +191,13 @@
 	/* look for resource under per language paths */
 	while (langv[langc] != NULL) {
 		/* allocate and fill a full resource name path buffer */
+		/* 
 		resnamelen = snprintf(NULL, 0,
 				      "/org/netsurf/%s/%s",
 				      langv[langc], resource->name);
+		resnamelen = strlen("/org/netsurf/%s/%s") + strlen(langv[langc]) + strlen(resource->name);
+		*/
+		resnamelen = 8192;
 		resname = malloc(resnamelen + 1);
 		if (resname == NULL) {
 			return NSERROR_NOMEM;
@@ -222,7 +226,9 @@
 	}
 
 	/* allocate and fill a full resource name path buffer with no language*/
-	resnamelen = snprintf(NULL, 0, "/org/netsurf/%s", resource->name);
+	/* resnamelen = snprintf(NULL, 0, "/org/netsurf/%s", resource->name);
+	resnamelen = strlen("/org/netsurf/%s") + strlen(resource->name); */
+	resnamelen = 8192;
 	resname = malloc(resnamelen + 1);
 	if (resname == NULL) {
 		return NSERROR_NOMEM;
diff -Naur netsurf-all-3.10-original/netsurf/include/netsurf/inttypes.h netsurf-all-3.10/netsurf/include/netsurf/inttypes.h
--- netsurf-all-3.10-original/netsurf/include/netsurf/inttypes.h	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/include/netsurf/inttypes.h	2021-07-04 11:14:12.527679040 +0000
@@ -47,6 +47,14 @@
 /** windows printf formatting for ssize_t type */
 #define PRIssizet "Id"
 
+#elif defined(__sgi)
+
+/** Irix printf formatting for size_t type */
+#define PRIsizet "d"
+
+/** Irix printf formatting for size_t type */
+#define PRIssizet "d"
+
 #else
 
 /** c99 standard printf formatting for size_t type */
diff -Naur netsurf-all-3.10-original/netsurf/utils/config.h netsurf-all-3.10/netsurf/utils/config.h
--- netsurf-all-3.10-original/netsurf/utils/config.h	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/utils/config.h	2021-07-04 11:14:12.536684720 +0000
@@ -32,6 +32,7 @@
 
 #if (defined(_GNU_SOURCE) && \
      !defined(__APPLE__) || \
+     defined(__sgi) || \
      defined(__amigaos4__) || \
      defined(__HAIKU__) || \
      (defined(_POSIX_C_SOURCE) && ((_POSIX_C_SOURCE - 0) >= 200809L)) && \
@@ -46,6 +47,7 @@
       defined(__APPLE__) ||			\
       defined(__HAIKU__) ||			\
       defined(__NetBSD__) ||			\
+      defined(__sgi) ||				\
       defined(__OpenBSD__)) &&			\
      !defined(__serenity__))
 #define HAVE_STRCASESTR
@@ -76,6 +78,7 @@
  */
 #if ((defined(_GNU_SOURCE) && !defined(__APPLE__)) ||	\
      defined(__riscos__) || \
+     defined(__sgi) || \
      defined(NetBSD_v8))
 #define HAVE_STRCHRNUL
 #else
diff -Naur netsurf-all-3.10-original/netsurf/utils/filepath.c netsurf-all-3.10/netsurf/utils/filepath.c
--- netsurf-all-3.10-original/netsurf/utils/filepath.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/utils/filepath.c	2021-07-04 11:14:12.544240400 +0000
@@ -200,11 +200,14 @@
 			/* path element exists and is a directory */
 			langc = 0;
 			while (langv[langc] != NULL) {
+				/*
 				tmppathlen = snprintf(NULL,
 						      0,
 						      "%s/%s",
 						      pathv[pathc],
 						      langv[langc]);
+				*/
+				tmppathlen = 8192;
 				tmppath = malloc(tmppathlen + 1);
 				if (tmppath == NULL) {
 					break;
diff -Naur netsurf-all-3.10-original/netsurf/utils/split-messages.pl netsurf-all-3.10/netsurf/utils/split-messages.pl
--- netsurf-all-3.10-original/netsurf/utils/split-messages.pl	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/utils/split-messages.pl	2021-07-04 11:14:12.553777040 +0000
@@ -311,7 +311,7 @@
     sub footer { qq|</resources>| }
     sub format
     {
-	use HTML::Entities qw(encode_entities);
+	use HTML::HTML5::Entities qw(encode_entities);
 	my $escaped = encode_entities( $_[1], '<>&"' );
 	qq|  <string name="$_[0]">$escaped</string>\n|;
     }
diff -Naur netsurf-all-3.10-original/netsurf/utils/useragent.c netsurf-all-3.10/netsurf/utils/useragent.c
--- netsurf-all-3.10-original/netsurf/utils/useragent.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/netsurf/utils/useragent.c	2021-07-04 11:14:12.562965760 +0000
@@ -48,10 +48,11 @@
                 sysname = un.sysname;
         }
 
-        len = snprintf(NULL, 0, NETSURF_UA_FORMAT_STRING,
+        /*len = snprintf(NULL, 0, NETSURF_UA_FORMAT_STRING,
                        netsurf_version_major,
                        netsurf_version_minor,
-                       sysname);
+                       sysname);*/
+	len = 8192;
         ua_string = malloc(len + 1);
         if (!ua_string) {
                 /** \todo this needs handling better */
diff -Naur netsurf-all-3.10-original/nsgenbind/Makefile netsurf-all-3.10/nsgenbind/Makefile
--- netsurf-all-3.10-original/nsgenbind/Makefile	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/nsgenbind/Makefile	2021-07-04 11:14:12.565505520 +0000
@@ -32,7 +32,7 @@
   endif
 endif
 
-CFLAGS := -D_BSD_SOURCE -D_DEFAULT_SOURCE -D_POSIX_C_SOURCE=200809L \
+CFLAGS := \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src \
 	$(WARNFLAGS) $(CFLAGS)
 ifneq ($(GCCVER),2)
diff -Naur netsurf-all-3.10-original/nsgenbind/src/duk-libdom-generated.c netsurf-all-3.10/nsgenbind/src/duk-libdom-generated.c
--- netsurf-all-3.10-original/nsgenbind/src/duk-libdom-generated.c	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/nsgenbind/src/duk-libdom-generated.c	2021-07-04 11:14:12.569030720 +0000
@@ -244,26 +244,53 @@
                                 "\tdom_element *et = (dom_element *)(((node_private_t *)priv)->node);\n");
                 }
 
-                outputf(outc,
-                        "\t/* handlerfn */\n"
-                        "\tduk_push_this(ctx);\n"
-                        "\t/* handlerfn this */\n"
-                        "\tduk_get_prop_string(ctx, -1, HANDLER_MAGIC);\n"
-                        "\t/* handlerfn this handlers */\n"
-                        "\tduk_push_lstring(ctx, \"%s\", %ld);\n"
-                        "\t/* handlerfn this handlers %s */\n"
-                        "\tduk_dup(ctx, -4);\n"
-                        "\t/* handlerfn this handlers %s handlerfn */\n"
-                        "\tduk_put_prop(ctx, -3);\n"
-                        "\t/* handlerfn this handlers */\n"
-                        "\tdukky_register_event_listener_for(ctx, et,\n"
-                        "\t\tcorestring_dom_%s, false);\n"
-                        "\treturn 0;\n",
-                        atributee->name + 2,
-                        strlen(atributee->name + 2),
-                        atributee->name + 2,
-                        atributee->name + 2,
-                        atributee->name + 2);
+                char skiptest[100];
+                sprintf(skiptest, "corestring_dom_%s", atributee->name + 2);
+
+                if (!strcmp(skiptest, "corestring_dom_select")) {
+                        outputf(outc,
+                                "\t/* handlerfn */\n"
+                                "\tduk_push_this(ctx);\n"
+                                "\t/* handlerfn this */\n"
+                                "\tduk_get_prop_string(ctx, -1, HANDLER_MAGIC);\n"
+                                "\t/* handlerfn this handlers */\n"
+                                "\tduk_push_lstring(ctx, \"%s\", %ld);\n"
+                                "\t/* handlerfn this handlers %s */\n"
+                                "\tduk_dup(ctx, -4);\n"
+                                "\t/* handlerfn this handlers %s handlerfn */\n"
+                                "\tduk_put_prop(ctx, -3);\n"
+                                "\t/* handlerfn this handlers */\n"
+                                "\tdukky_register_event_listener_for(ctx, et,\n"
+                                "\t\tcorestring_dom_%sed, false);\n"
+                                "\treturn 0;\n",
+                                atributee->name + 2,
+                                strlen(atributee->name + 2),
+                                atributee->name + 2,
+                                atributee->name + 2,
+                                atributee->name + 2);
+                } else {
+                        outputf(outc,
+                                "\t/* handlerfn */\n"
+                                "\tduk_push_this(ctx);\n"
+                                "\t/* handlerfn this */\n"
+                                "\tduk_get_prop_string(ctx, -1, HANDLER_MAGIC);\n"
+                                "\t/* handlerfn this handlers */\n"
+                                "\tduk_push_lstring(ctx, \"%s\", %ld);\n"
+                                "\t/* handlerfn this handlers %s */\n"
+                                "\tduk_dup(ctx, -4);\n"
+                                "\t/* handlerfn this handlers %s handlerfn */\n"
+                                "\tduk_put_prop(ctx, -3);\n"
+                                "\t/* handlerfn this handlers */\n"
+                                "\tdukky_register_event_listener_for(ctx, et,\n"
+                                "\t\tcorestring_dom_%s, false);\n"
+                                "\treturn 0;\n",
+                                atributee->name + 2,
+                                strlen(atributee->name + 2),
+                                atributee->name + 2,
+                                atributee->name + 2,
+                                atributee->name + 2);
+                }
+
                 return 0;
         }
         return -1;
diff -Naur netsurf-all-3.10-original/nsgenbind/src/nsgenbind-parser.y netsurf-all-3.10/nsgenbind/src/nsgenbind-parser.y
--- netsurf-all-3.10-original/nsgenbind/src/nsgenbind-parser.y	2020-05-24 15:35:23.000000000 +0000
+++ netsurf-all-3.10/nsgenbind/src/nsgenbind-parser.y	2021-07-04 11:14:12.572357920 +0000
@@ -102,9 +102,11 @@
 
         UNUSED(genbind_ast);
         UNUSED(filename);
-
+	/*
         errlen = snprintf(NULL, 0, "%s:%d:%s",
                           locp->filename, locp->first_line, str);
+	*/
+	errlen = 8192;
         errtxt = malloc(errlen + 1);
         snprintf(errtxt, errlen + 1, "%s:%d:%s",
                           locp->filename, locp->first_line, str);
